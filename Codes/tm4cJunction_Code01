/*

          Program to interface TM4C1294-XL Junction-1 in Artificial Intelligent Robot  
          Created by AIHRo Group @ AIHRo Workspace
          R&D Productions

*/


#define LED RED_LED
#define echoPin 63 
#define trigPin 73 
#define LEDPin GREEN_LED 

char cy,kywrd[15],unch,cntch,chges;
int i,count,stri,potValue,outputValue,countunkn=0;
int cntim,cntimtm,cntimtm1,gestimedif;
const int time=5000;
long gestime,gestimepre;
long duration, distance;

long time11,time12;
long time21,time22;


int timedif1,timedif2,ultracount=0;


void setup()
  {
   Serial3.begin(9600); //Bluetooth
   Serial7.begin(9600); //Gesture
   Serial.begin(9600); 
   
   pinMode(A3,OUTPUT);
   analogWrite(A3,100);
   pinMode(LED, OUTPUT);
   pinMode(trigPin, OUTPUT);
   pinMode(echoPin, INPUT);
   pinMode(LEDPin, OUTPUT); 
   digitalWrite(LED,HIGH);
   delay(1000);
   digitalWrite(LED,LOW);
  }
  
  
  
  
  
void loop()
  {
   
   
  //  ultrasonic();
   // delay(100);
    talk();  
    if(Serial.available())
         {
           kyword(); 
           
           if(Serial7.available())
                 {
                  while(Serial7.available())
                        {
                         Serial7.read();
                         delay(10);
                        }
                 }
                                
                 
           for(count=0;count<time;count++)   //Delay for giving conformation message Yes or No
               {    
                btmodulemsg();    //Check for Yes or No
                if(cy=='s')
                    {
                     Serial.print("Yes ");
                     
                    potValue=analogRead(A4);
                    outputValue = map(potValue, 0, 4500, 1, 10);  
                    Serial.print(outputValue);
                    Serial.print(" ");
      
                    if(countunkn==0)
                        {
                        Serial.print("\n");
                        countunkn=1;
                        }
                    cy='d';
                    gestimepre=millis();              
                    gesture();
                    count=time;
                    break;
                    delay(1000);
                    Serial.print("\n");
                    }
                  delay(10);
                if((count==(time-1))||(cy=='o'))
                    {
                    Serial.print("No");
                    Serial.print("\n");
                    cy='d';
                    }
              }  
         }
      talk();
   }
  
    
 void btmodulemsg()
          {
          if(Serial3.available())
                 {               
                 digitalWrite(LED,HIGH);
                 while (Serial3.available())
                         {  
                         delay(10);
                         cy = Serial3.read();
                         count=time+1000;
                         }
                  digitalWrite(LED,LOW);
                  } 
            }    
    
   
   
   
  
  
void gesture()
           {
             Serial7.flush();
            int gesti,gestcount=1;
             for(gesti=0;;gesti++)
                 {
                digitalWrite(LED,HIGH);
                gestime=millis();
                gestimedif=gestime-gestimepre;
                if(gestimedif>40000)
                      {
                      Serial.print("Noo");
                      Serial.print("\n");
                      return;
                      }
                   while (Serial7.available())
                           {
                           gestimepre=millis();
                           delay(50);
                          p: chges=Serial7.read();
                           int chkval=gescheck(chges);
                           if(chkval==0)
                               goto p;
                           if(chges=='<')
                               gestcount=1;
                           
                            else if(chges=='>')
                               {
                               Serial.print("\n");
                               gestcount=1;
                               }
                                      
                           else if(chges=='0')
                               {
                                 Serial.print("\n");
                                Serial.print('g');
                                Serial.print("\n");
                                return;
                               }
                            else if(gestcount%5!=0)
                                 {
                                 
                                 Serial.print(chges);
                                 Serial7.flush();
                                 gestcount++;
                                 }     
                           }   
                                     
                           
                    digitalWrite(LED,LOW);
                    delay(10);
                 } 
           }
           
   
   
  
 void talk()
       {
       //  Serial.println("talk");
        if(Serial3.available())
               {
               digitalWrite(LED,HIGH);
               while (Serial3.available())
                     {  
                     delay(10);
                     cy = Serial3.read();
                     Serial.print(cy);
                     }
                Serial.print("\n");
                cy='d';
                digitalWrite(LED,LOW);
                } 
     }    
      
int gescheck(char gch)
    {
    if((gch=='>')||(gch=='<')||(gch=='1')||(gch=='2')||(gch=='3')||(gch=='4')||(gch=='5')||(gch=='6')||(gch=='7')||(gch=='8')||(gch=='9')||(gch=='0'))
         return(1);
     else return(0);
    }
    
    
void kyword()
      {
       int ik=0;
       if(Serial.available())
             {
              while(Serial.available())
                  {
                  kywrd[ik]=Serial.read();
                  delay(10);
                  ik++;
                  }
               kywrd[ik]='\0';
             }
      }
      
      
 void ultrasonic() 
      {
     //  Serial.println("ultrasonic");
    digitalWrite(trigPin, LOW); 
       delayMicroseconds(2); 
      
       digitalWrite(trigPin, HIGH);
       delayMicroseconds(10); 
       
       digitalWrite(trigPin, LOW);
       duration = pulseIn(echoPin, HIGH);
 
       distance = duration/58.2;
             if(distance>70)
                 ultracount=0;
               if((distance<15)&&(distance>0))
                     { 
                      Serial.println("Inroduction");
                      delay(2000);      
                       }          
                if(ultracount==0)
                    {
                     if((distance<70)&&(distance>15))
                           {
                            Serial.println("Hello");
                              time21=millis();
                                 ultracount++;
                           }
                    }
                 else
                      {
                      if((distance<70)&&(distance>15))
                          {
                          time22=millis();                     
                          timedif2=time22-time21;
                          if(timedif2>15000)
                                {
                                 Serial.println("Hello");
                                 time21=millis();
                                 timedif2=0;
                                 }
                           } 
                                    
                    }
         delay(50);
      }    
